diff --git a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
index cfb133c..b7d2583 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
@@ -1,67 +1,34 @@
 <template>
     <base-app-footer>
-        <template v-slot:default="{ meta} ">
+        <template v-slot:default="{ meta }">
             <footer class="footer">
                 <div class="content has-text-centered">
                     <div class="level">
                         <div class="level-item">
                             <strong class="has-margin-right-small">
                                 {{ meta.appName }} v{{ meta.version }}
+                                <span class="has-margin-left-small">
+                             </span>
+                                <a href="https://github.com/laravel-enso/enso"  target="_blank">
+                                    <img src="/images/enso.svg"
+                                         alt="Made with Laravel Enso" width="28" height="28"/>
+                                </a>
+                                <a href="https://vuejs.org"
+                                   target="_blank">
+                                    <img src="/images/vue-badge.png"/>
+                                </a><br/><br/>
+                             <span class="icon">
+                                 <fa :icon="['fab', 'github']"/>
+                             </span>
+                                <a href="https://github.com/modularsoftware/genealogy"
+                                   target="_blank">Genealogia GitHub</a>
+                                 <span class="icon">
+                                 <fa :icon="['fab', 'facebook']"/>
+                                 </span>
+                                <a href="https://www.facebook.com/genealogiawebsite" target="_blank">Genealogia Facebook Page</a>
                             </strong>
-                            built with
-                            <span class="icon has-text-danger">
-                                <fa icon="heart"/>
-                            </span>
-                            <span class="has-margin-left-small">
-                                +
-                            </span>
-                            <a href="https://vuejs.org"
-                                target="_blank">
-                                <img src="/images/vue-badge.png"
-                                    alt="Made with Vue"
-                                    width="28"
-                                    height="28">
-                            </a>
-                            +
-                            <a href="https://laravel.com"
-                                class="has-margin-left-small"
-                                target="_blank">
-                                <img src="/images/laravel-badge.png"
-                                    alt="Made with Laravel"
-                                    width="28"
-                                    height="28">
-                            </a>
-                            <span class="has-margin-left-small">
-                                +
-                            </span>
-                            <a href="https://bulma.io"
-                                target="_blank">
-                                <img src="/images/bulma.svg"
-                                    alt="Made with Bulma"
-                                    width="28"
-                                    height="28">
-                            </a>
                         </div>
                     </div>
-                    <div class="level">
-                        <div class="level-item">
-                            <strong>Backed by:</strong>
-                            <a href="https://earthlink.ro"
-                                target="_blank">
-                                <figure class="image earthlink">
-                                    <img src="/images/earthlink.svg">
-                                </figure>
-                            </a>
-                        </div>
-                    </div>
-                    <div>
-                        <a href="https://github.com/laravel-enso/enso"
-                            target="_blank">
-                            <span class="icon">
-                                <fa :icon="['fab', 'github']"/>
-                            </span>
-                        </a>
-                    </div>
                 </div>
             </footer>
         </template>
@@ -70,15 +37,17 @@
 
 <script>
 import { library } from '@fortawesome/fontawesome-svg-core';
-import { faHeart } from '@fortawesome/free-solid-svg-icons';
+import { faFacebook } from '@fortawesome/free-brands-svg-icons';
 import { faGithub } from '@fortawesome/free-brands-svg-icons';
 import BaseAppFooter from '../../core/components/AppFooter.vue';
 
-library.add(faHeart, faGithub);
+library.add(faFacebook,faGitHub);
 
 export default {
     name: 'AppFooter',
 
+    inject: ['i18n'],
+
     components: { BaseAppFooter },
 };
 </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/menu/Sidebar.vue b/node_modules/@enso-ui/ui/src/bulma/components/menu/Sidebar.vue
index d3a6798..22c0f3c 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/menu/Sidebar.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/menu/Sidebar.vue
@@ -1,6 +1,6 @@
 <template>
     <core-sidebar>
-        <template v-slot:default="{ menus, isActive }">
+        <template v-slot:default="{ menus }">
             <vue-aside class="sidebar no-scrollbars">
                 <p class="menu-label is-bold has-text-centered">
                     {{ i18n("Menu") }}
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
index 5bb388a..230dfd6 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
@@ -63,20 +63,6 @@
                             <span class="is-hidden-mobile"/>
                         </a>
                     </div>
-                    <div class="level-item"
-                        v-if="canAccess('administration.users.token')">
-                        <a class="button is-link"
-                           @click="generateToken"
-                           v-if="ready">
-                            <span class="is-hidden-mobile">
-                                {{ i18n('Generate Token') }}
-                            </span>
-                            <span class="icon">
-                                <fa icon="key"/>
-                            </span>
-                            <span class="is-hidden-mobile"/>
-                        </a>
-                    </div>
                     <div class="level-item"
                         v-if="canAccess('administration.users.resetPassword')">
                         <a class="button is-black"
@@ -93,24 +79,53 @@
                     </div>
                 </template>
             </enso-form>
+            <accessories>
+                <template slot-scope="{ count }">
+                    <tab keep-alive
+                        v-if="canAccess('administration.users.tokens.index')"
+                        id="Tokens">
+                        <div class="columns is-centered">
+                            <div class="column is-half">
+                                <tokens :id="$route.params.user"
+                                    @update="$set(count, 'Tokens', $refs.tokens.count)"
+                                    ref="tokens"/>
+                            </div>
+                        </div>
+                    </tab>
+                    <tab keep-alive
+                        v-if="canAccessSessions"
+                        id="Sessions">
+                        <div class="columns is-centered">
+                            <div class="column is-half">
+                                <sessions :id="$route.params.user"
+                                    @update="$set(count, 'Sessions', $refs.sessions.count)"
+                                    ref="sessions"/>
+                            </div>
+                        </div>
+                    </tab>
+                </template>
+            </accessories>
             <delete-modal :user-id="deletableUser"
                 @close="deletableUser = null"
                 @destroyed="navigateToIndex"
                 v-if="!!deletableUser"/>
-            <url :show="token !== ''"
-                :link="token"
-                @close="token = ''"/>
         </div>
     </div>
 </template>
 
 <script>
 import { library } from '@fortawesome/fontawesome-svg-core';
-import { faUserTie, faTrashAlt, faKey, faRedo } from '@fortawesome/free-solid-svg-icons';
+import {
+    faUserTie, faTrashAlt, faKey, faRedo,
+} from '@fortawesome/free-solid-svg-icons';
 import { EnsoForm, FormField } from '@enso-ui/forms/bulma';
-import Url from '@enso-ui/files/src/bulma/pages/files/components/Url.vue'; // TODO:: refactor to a package
+import { Accessories } from '@enso-ui/bulma';
+import { Tab } from '@enso-ui/tabs/bulma';
+import { mapState } from 'vuex';
 import PasswordStrength from '../../auth/components/PasswordStrength.vue';
 import DeleteModal from './components/DeleteModal.vue';
+import Tokens from './components/Tokens.vue';
+import Sessions from './components/Sessions.vue';
 
 library.add(faUserTie, faTrashAlt, faKey, faRedo);
 
@@ -118,7 +133,14 @@ export default {
     name: 'Edit',
 
     components: {
-        EnsoForm, FormField, PasswordStrength, DeleteModal, Url,
+        Accessories,
+        DeleteModal,
+        EnsoForm,
+        FormField,
+        PasswordStrength,
+        Sessions,
+        Tab,
+        Tokens,
     },
 
     inject: ['i18n', 'canAccess', 'route', 'toastr', 'errorHandler'],
@@ -129,24 +151,25 @@ export default {
         pivotParams: { userGroups: { id: null } },
         password: null,
         passwordConfirmation: null,
-        token: '',
     }),
 
+    computed: {
+        ...mapState(['enums', 'user']),
+        canAccessSessions() {
+            return this.canAccess('administration.users.sessions.index')
+                && (`${this.user.role.id}` === this.enums.roles.Admin
+                || this.user.id === this.$route.params.user);
+        },
+    },
+
     methods: {
         navigateToIndex() {
             this.deletableUser = null;
 
             this.$nextTick(() => {
-                this.$router.push({
-                    name: 'administration.users.index',
-                });
+                this.$router.push({ name: 'administration.users.index' });
             });
         },
-        generateToken() {
-            axios.post(this.route('administration.users.token', this.$route.params))
-                .then(({ data }) => this.token = data.token)
-                .catch(this.errorHandler);
-        },
         resetPassword() {
             axios.post(this.route('administration.users.resetPassword', this.$route.params))
                 .then(({ data }) => this.toastr.success(data.message))
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Session.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Session.vue
new file mode 100644
index 0000000..867444b
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Session.vue
@@ -0,0 +1,145 @@
+<template>
+    <div class="box has-padding-small raises-on-hover has-margin-bottom-medium">
+        <div class="level">
+            <div class="level-left">
+                <div class="level-item">
+                    <span class="icon is-small has-margin-small"
+                        v-tooltip="session.ipAddress">
+                        <fa icon="link"/>
+                    </span>
+                    <span>{{ session.ipAddress }}</span>
+                </div>
+            </div>
+            <div class="level-right">
+                <div class="level-item">
+                    <span class="icon is-small has-margin-right-small"
+                        v-tooltip="lastActivity(session)">
+                        <fa icon="calendar-alt"/>
+                    </span>
+                    <span class="icon is-small has-margin-right-small"
+                        v-tooltip="`${session.OS} version: ${session.OSVersion}`">
+                        <fa :icon="os(session)"/>
+                    </span>
+                    <span class="icon is-small has-margin-right-small"
+                        v-tooltip="`${session.browser} version: ${session.browserVersion}`">
+                        <fa :icon="browser(session)"/>
+                    </span>
+                    <span class="is-pulled-right is-flex">
+                        <confirmation placement="top"
+                            @show="confirmation = true"
+                            @hide="confirmation = false"
+                            @confirm="$emit('delete')">
+                            <a class="button is-naked is-small">
+                                <span class="icon">
+                                    <fa icon="trash-alt"/>
+                                </span>
+                            </a>
+                        </confirmation>
+                    </span>
+                </div>
+            </div>
+        </div>
+    </div>
+</template>
+
+<script>
+import { VTooltip } from 'v-tooltip';
+import { library } from '@fortawesome/fontawesome-svg-core';
+import {
+    faTrashAlt, faInfoCircle, faCalendarAlt, faPencilAlt, faLink,
+    faQuestionCircle,
+} from '@fortawesome/free-solid-svg-icons';
+
+import {
+    faWindows, faLinux, faApple, faAndroid, faChrome,
+    faOpera, faInternetExplorer, faFirefoxBrowser, faEdge,
+    faUbuntu, faFreebsd, faSafari,
+} from '@fortawesome/free-brands-svg-icons';
+
+import Confirmation from '@enso-ui/confirmation/bulma';
+import formatDistance from '../../../../../modules/plugins/date-fns/formatDistance';
+
+library.add([
+    faCalendarAlt, faInfoCircle, faPencilAlt, faTrashAlt, faLink,
+    faQuestionCircle, faWindows, faLinux, faApple, faAndroid, faChrome,
+    faOpera, faInternetExplorer, faFirefoxBrowser, faEdge, faLinux, faUbuntu,
+    faFreebsd, faSafari,
+]);
+
+export default {
+    name: 'Session',
+
+    inject: ['canAccess'],
+
+    directives: { tooltip: VTooltip },
+
+    components: { Confirmation },
+
+    props: {
+        session: {
+            type: Object,
+            required: true,
+        },
+    },
+
+    data: () => ({
+        confirmation: false,
+    }),
+
+    methods: {
+        lastActivity({ lastActivity }) {
+            return lastActivity
+                ? `last used: ${formatDistance(lastActivity)}`
+                : 'Not used yet';
+        },
+        os({ OS }) {
+            switch (OS) {
+            case 'Windows':
+            case 'Windows NT':
+            case 'WindowsPhoneOS':
+            case 'WindowsMobileOS':
+                return ['fab', 'windows'];
+            case 'OS X':
+            case 'iOS':
+            case 'iPadOS':
+            case 'Macintosh':
+                return ['fab', 'apple'];
+            case 'Ubuntu':
+                return ['fab', 'ubuntu'];
+            case 'OpenBSD':
+                return ['fab', 'freebsd'];
+            case 'Debian':
+            case 'Linux':
+                return ['fab', 'linux'];
+            case 'ChromeOS':
+                return ['fab', 'chrome'];
+            case 'AndroidOS':
+                return ['fab', 'android'];
+            default:
+                return 'question-circle';
+            }
+        },
+        browser({ browser }) {
+            switch (browser) {
+            case 'Opera Mini':
+            case 'Opera':
+                return ['fab', 'opera'];
+            case 'Edge':
+                return ['fab', 'edge'];
+            case 'Chrome':
+                return ['fab', 'chrome'];
+            case 'Mozilla':
+            case 'Firefox':
+                return ['fab', 'firefox-browser'];
+            case 'Safari':
+                return ['fab', 'safari'];
+            case 'IE':
+                return ['fab', 'internet-explorer'];
+
+            default:
+                return 'question-circle';
+            }
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Sessions.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Sessions.vue
new file mode 100644
index 0000000..d300c4d
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Sessions.vue
@@ -0,0 +1,108 @@
+<template>
+    <div class="sessions-wrapper">
+        <div class="field is-grouped">
+            <p class="control has-icons-left has-icons-right is-expanded">
+                <input v-model="query"
+                    class="input is-rounded is-small is-expanded"
+                    type="text"
+                    :placeholder="i18n('Filter')">
+                <span class="icon is-small is-left">
+                    <fa icon="search"/>
+                </span>
+                <span class="icon is-small is-right clear-button"
+                    @click="query = ''"
+                    v-if="query">
+                    <a class="delete is-small"/>
+                </span>
+            </p>
+            <p class="control">
+                <a class="button is-rounded is-small is-bold has-margin-left-medium"
+                    @click="fetch()">
+                    <span>
+                        {{ i18n('Reload') }}
+                    </span>
+                    <span class="icon">
+                        <fa icon="sync"/>
+                    </span>
+                </a>
+            </p>
+        </div>
+        <div>
+            <div v-for="(session, index) in filteredSessions"
+                :key="session.id">
+                <session :id="id"
+                    :session="session"
+                    @delete="destroy(session, index)"/>
+            </div>
+        </div>
+    </div>
+</template>
+
+<script>
+import { library } from '@fortawesome/fontawesome-svg-core';
+import { faPlus, faSync, faSearch } from '@fortawesome/free-solid-svg-icons';
+import Session from './Session.vue';
+
+library.add(faPlus, faSync, faSearch);
+
+export default {
+    name: 'Sessions',
+
+    inject: ['canAccess', 'errorHandler', 'i18n', 'route', 'toastr'],
+
+    components: { Session },
+
+    props: {
+        id: {
+            type: [Number, String],
+            required: true,
+        },
+    },
+
+    data: () => ({
+        sessions: [],
+        query: '',
+        form: false,
+    }),
+
+    computed: {
+        filteredSessions() {
+            const query = this.query.toLowerCase();
+
+            return query
+                ? this.sessions.filter(({ ipAddress, OS, browser }) => OS.toLowerCase().indexOf(query) > -1
+                    || ipAddress.toLowerCase().indexOf(query) > -1
+                    || browser.toLowerCase().indexOf(query) > -1)
+                : this.sessions;
+        },
+        count() {
+            return this.filteredSessions.length;
+        },
+    },
+
+    created() {
+        this.fetch();
+    },
+
+    methods: {
+        fetch() {
+            axios.get(this.route('administration.users.sessions.index', this.$route.params))
+                .then(({ data }) => {
+                    this.sessions = data;
+                    this.$emit('update');
+                }).catch(this.errorHandler);
+        },
+        destroy({ id }, index) {
+            axios.delete(
+                this.route('administration.users.sessions.destroy', this.$route.params),
+                { params: { id } }
+            ).then(({ data }) => {
+                const deletedToken = this.sessions.splice(index, 1).pop();
+                this.$emit('remove', deletedToken.id);
+                this.$emit('update');
+                this.toastr.success(data.message);
+            }).catch(this.errorHandler);
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Token.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Token.vue
new file mode 100644
index 0000000..115f155
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Token.vue
@@ -0,0 +1,80 @@
+<template>
+    <div class="box has-padding-small raises-on-hover has-margin-bottom-medium">
+        <div class="level">
+            <div class="level-left">
+                <div class="level-item">
+                    <span class="icon is-small has-margin-small"
+                        v-tooltip="token.name">
+                        <fa icon="key"/>
+                    </span>
+                    <span>
+                        {{ token.name }}
+                    </span>
+                </div>
+            </div>
+            <div class="level-right">
+                <div class="level-item">
+                    <span class="icon is-small"
+                        v-tooltip="lastUsed(token)">
+                        <fa icon="calendar-alt"/>
+                    </span>
+                    <span class="is-pulled-right is-flex">
+                        <confirmation placement="top"
+                            @show="confirmation = true"
+                            @hide="confirmation = false"
+                            @confirm="$emit('delete')">
+                            <a class="button is-naked is-small">
+                                <span class="icon">
+                                    <fa icon="trash-alt"/>
+                                </span>
+                            </a>
+                        </confirmation>
+                    </span>
+                </div>
+            </div>
+        </div>
+    </div>
+</template>
+
+<script>
+import { VTooltip } from 'v-tooltip';
+import { library } from '@fortawesome/fontawesome-svg-core';
+import {
+    faTrashAlt, faInfoCircle, faCalendarAlt, faPencilAlt,
+} from '@fortawesome/free-solid-svg-icons';
+import Confirmation from '@enso-ui/confirmation/bulma';
+import formatDistance from '../../../../../modules/plugins/date-fns/formatDistance';
+
+library.add([
+    faCalendarAlt, faInfoCircle, faPencilAlt, faTrashAlt,
+]);
+
+export default {
+    name: 'Token',
+
+    inject: ['canAccess'],
+
+    directives: { tooltip: VTooltip },
+
+    components: { Confirmation },
+
+    props: {
+        token: {
+            type: Object,
+            required: true,
+        },
+    },
+
+    data: () => ({
+        confirmation: false,
+    }),
+
+    methods: {
+        lastUsed({ lastUsedAt }) {
+            return lastUsedAt
+                ? `last used: ${formatDistance(lastUsedAt)}`
+                : 'Not used yet';
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/TokenForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/TokenForm.vue
new file mode 100644
index 0000000..554f4b7
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/TokenForm.vue
@@ -0,0 +1,34 @@
+<template>
+    <modal portal="token-form"
+        v-on="$listeners">
+        <enso-form class="box has-background-light"
+            v-bind="$attrs"
+            disable-state
+            v-on="$listeners"/>
+    </modal>
+</template>
+
+<script>
+import { Modal } from '@enso-ui/modal/bulma';
+import { EnsoForm } from '@enso-ui/forms/bulma';
+
+export default {
+    name: 'TokenForm',
+
+    components: { Modal, EnsoForm },
+
+    inject: ['i18n'],
+};
+</script>
+
+<style lang="scss">
+    .token-form .modal-content {
+        overflow: unset;
+    }
+
+    @media screen and (max-width: 1023px) {
+        .token-form .modal-content {
+            width: 95%;
+        }
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Tokens.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Tokens.vue
new file mode 100644
index 0000000..dbe4419
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/Tokens.vue
@@ -0,0 +1,144 @@
+<template>
+    <div class="tokens-wrapper">
+        <div class="field is-grouped">
+            <p class="control">
+                <a class="button is-rounded is-small is-bold is-info"
+                    @click="form = true"
+                    v-if="canAccess('administration.users.tokens.create')">
+                    <span>
+                        {{ i18n('New Token') }}
+                    </span>
+                    <span class="icon">
+                        <fa icon="plus"/>
+                    </span>
+                </a>
+            </p>
+            <p class="control has-icons-left has-icons-right is-expanded">
+                <input v-model="query"
+                    class="input is-rounded is-small is-expanded"
+                    type="text"
+                    :placeholder="i18n('Filter')">
+                <span class="icon is-small is-left">
+                    <fa icon="search"/>
+                </span>
+                <span v-if="query"
+                    class="icon is-small is-right clear-button"
+                    @click="query = ''">
+                    <a class="delete is-small"/>
+                </span>
+            </p>
+            <p class="control">
+                <a class="button is-rounded is-small is-bold has-margin-left-medium"
+                    @click="fetch()">
+                    <span>
+                        {{ i18n('Reload') }}
+                    </span>
+                    <span class="icon">
+                        <fa icon="sync"/>
+                    </span>
+                </a>
+            </p>
+        </div>
+        <div>
+            <div v-for="(token, index) in filtered"
+                :key="token.id">
+                <token :id="id"
+                    :token="token"
+                    @delete="destroy(token, index)"/>
+            </div>
+        </div>
+        <token-form :path="create"
+            @close="form = false"
+            @submit="onCreate"
+            ref="form"
+            v-if="form"/>
+        <url :show="token !== ''"
+            :link="token"
+            @close="token = ''"/>
+    </div>
+</template>
+
+<script>
+import { library } from '@fortawesome/fontawesome-svg-core';
+import { faPlus, faSync, faSearch } from '@fortawesome/free-solid-svg-icons';
+import Url from '@enso-ui/files/src/bulma/pages/files/components/Url.vue'; // TODO:: refactor to a package
+import Token from './Token.vue';
+import TokenForm from './TokenForm.vue';
+
+library.add(faPlus, faSync, faSearch);
+
+export default {
+    name: 'Tokens',
+
+    inject: ['canAccess', 'errorHandler', 'i18n', 'route', 'toastr'],
+
+    components: {
+        Token, TokenForm, Url,
+    },
+
+    props: {
+        id: {
+            type: [Number, String],
+            required: true,
+        },
+    },
+
+    data: () => ({
+        tokens: [],
+        query: '',
+        form: false,
+        token: '',
+    }),
+
+    computed: {
+        filtered() {
+            const query = this.query.toLowerCase();
+
+            return query
+                ? this.tokens.filter(({ name }) => name.toLowerCase().indexOf(query) > -1)
+                : this.tokens;
+        },
+        count() {
+            return this.filtered.length;
+        },
+        create() {
+            return this.route(
+                'administration.users.tokens.create',
+                this.$route.params,
+            );
+        },
+    },
+
+    created() {
+        this.fetch();
+    },
+
+    methods: {
+        fetch() {
+            axios.get(this.route('administration.users.tokens.index', this.$route.params))
+                .then(({ data }) => {
+                    this.tokens = data;
+                    this.$emit('update');
+                }).catch(this.errorHandler);
+        },
+        destroy({ id }, index) {
+            axios.delete(
+                this.route('administration.users.tokens.destroy', this.$route.params),
+                { params: { id } }
+            ).then(({ data }) => {
+                const deletedToken = this.tokens.splice(index, 1).pop();
+                this.$emit('remove', deletedToken.id);
+                this.$emit('update');
+                this.toastr.success(data.message);
+            }).catch(this.errorHandler);
+        },
+        onCreate({ token }) {
+            this.fetch();
+            this.form = false;
+            setTimeout(() => {
+                this.token = token;
+            }, 500);
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
index 1cb7721..fe8851e 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/components/UserProfile.vue
@@ -182,7 +182,9 @@
 </template>
 
 <script>
-import { mapState, mapMutations, mapActions, mapGetters } from 'vuex';
+import {
+    mapState, mapMutations, mapActions, mapGetters,
+} from 'vuex';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import {
     faUser, faSyncAlt, faTrashAlt, faUpload, faSignOutAlt, faPencilAlt,
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
new file mode 100644
index 0000000..b633384
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
@@ -0,0 +1,36 @@
+<template>
+            <register-form
+                action="Register"
+                route="register"
+                @success="init"/>
+        </template>
+
+<script>
+    import { mapMutations, mapState } from 'vuex';
+    import RegisterForm from './components/RegisterForm.vue';
+
+            export default {
+        name: 'Register',
+
+                        components: { RegisterForm },
+
+                computed: {
+                    ...mapState(['meta']),
+                        },
+
+                methods: {
+                    ...mapMutations('auth', ['login']),
+                            ...mapMutations('layout', ['home']),
+                            ...mapMutations(['setShowQuote', 'setCsrfToken']),
+                            init(data) {
+                                this.setShowQuote(this.meta.showQuote);
+                                this.setCsrfToken(data.csrfToken);
+                                setTimeout(() => {
+                                            this.$router.push({ name: 'verify' });
+                                            // this.login();
+                                                    // this.home(true);
+                                                        }, 500);
+                            },
+                },
+    };
+    </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
new file mode 100644
index 0000000..9624504
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
@@ -0,0 +1,34 @@
+<template>
+            <verify-form
+                action="Resend"
+                @verified="init"/>
+        </template>
+
+<script>
+    import { mapMutations, mapState } from 'vuex';
+    import VerifyForm from './components/VerifyForm.vue';
+
+            export default {
+        name: 'Verify',
+
+                        components: { VerifyForm },
+
+                computed: {
+                    ...mapState(['meta']),
+                        },
+
+                methods: {
+                    ...mapMutations('auth', ['login']),
+                            ...mapMutations('layout', ['home']),
+                            ...mapMutations(['setShowQuote', 'setCsrfToken']),
+                            init(data) {
+                                this.setShowQuote(this.meta.showQuote);
+                                this.setCsrfToken(data.csrfToken);
+                                setTimeout(() => {
+                                            this.login();
+                                            this.home(true);
+                                        }, 3000);
+                            },
+                },
+    };
+    </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
index 8e4e7b1..ddac858 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
@@ -117,11 +117,47 @@
                     </button>
                 </div>
             </form>
+                        <router-link v-if="isLogin"
+                                                               :to="{ name: 'register' }"
+                                                               class="is-pulled-left">
+                            {{ i18n('Register') }}
+                        </router-link>
             <router-link v-if="isLogin"
                 :to="{ name: 'password.email' }"
                 class="is-pulled-right">
                 {{ i18n('Forgot password') }}
             </router-link>
+            <div>
+            <br />
+                        <router-link v-if="isLogin"
+                                                               :to="{ name: 'about.index' }"
+                                                               class="is-pulled-left">
+                            {{ i18n('About') }}&nbsp;
+                        </router-link>
+                        <router-link v-if="isLogin"
+                                                               :to="{ name: 'contact.index' }"
+                                                               class="is-pulled-right">
+                            {{ i18n('Contact') }} &nbsp;
+                        </router-link>
+            </div>
+            <br />
+            <div>
+                        <router-link v-if="isLogin"
+                                                               :to="{ name: 'privacy.index' }"
+                                                               class="is-pulled-left">
+                            {{ i18n('Privacy Policy') }}
+                        </router-link>
+                        <router-link v-if="isLogin"
+                                                               :to="{ name: 'termsandconditions.index' }"
+                                                               class="is-pulled-right">
+                            {{ i18n('Terms and Conditions') }}
+                        </router-link>
+            </div>
+            <br /><br /><br />  
+            <div>
+            Copyright 2020 Genealogia Ltd. International House, 12 Constance Street
+            London, E16 2DQ. Company Number: 12734769
+            </div>
             <div class="is-clearfix"/>
         </div>
     </div>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
new file mode 100644
index 0000000..676a42f
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
@@ -0,0 +1,331 @@
+<template>
+        <div class="login">
+            <div class="box has-padding-medium">
+                <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                    <figure class="image is-24x24 logo is-clickable"
+                                                     @click="$router.push({ name: 'login' })">
+                        <img src="/images/logo.svg">
+                    </figure>
+                    {{ meta.appName }}
+                </h3>
+                <form class="has-margin-bottom-medium"
+                                         @submit.prevent="submit()">
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="first_name"
+                                                                   v-focus
+                                                                   class="input"
+                                                                   type="text"
+                                                                   :class="{ 'is-danger': errors.has('first_name'), 'is-success': isSuccessful }"
+                                                                   :placeholder="i18n('First Name')"
+                                                                   @input="errors.clear('first_name')">
+                            <span class="icon is-small is-left">
+                            <fa icon="user"/>
+                        </span>
+                            <span v-if="isSuccessful"
+                                                                 class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('first_name')"
+                                                                 class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                   v-if="errors.has('first_name')">
+                            {{ errors.get('first_name') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="last_name"
+                                                                   v-focus
+                                                                   class="input"
+                                                                   type="text"
+                                                                   :class="{ 'is-danger': errors.has('last_name'), 'is-success': isSuccessful }"
+                                                                   :placeholder="i18n('Last Name')"
+                                                                   @input="errors.clear('last_name')">
+                            <span class="icon is-small is-left">
+                            <fa icon="user"/>
+                        </span>
+                            <span v-if="isSuccessful"
+                                                                 class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('last_name')"
+                                                                 class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                   v-if="errors.has('last_name')">
+                            {{ errors.get('last_name') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="email"
+                                                                   v-focus
+                                                                   class="input"
+                                                                   type="email"
+                                                                   :class="{ 'is-danger': errors.has('email'), 'is-success': isSuccessful }"
+                                                                   :placeholder="i18n('Email')"
+                                                                   @input="errors.clear('email')">
+                            <span class="icon is-small is-left">
+                            <fa icon="envelope"/>
+                        </span>
+                            <span v-if="isSuccessful"
+                                                                 class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('email')"
+                                                                 class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                   v-if="errors.has('email')">
+                            {{ errors.get('email') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="password"
+                                                                   class="input"
+                                                                   :type="passwordMeta.content"
+                                                                   :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                                                                   :placeholder="i18n('Password')"
+                                                                   @input="errors.clear('password')">
+                            <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                            <reveal-password :meta="passwordMeta"
+                                                                                       :class="{ 'is-spaced': isSuccessful || errors.has('password') }"
+                                                                                       v-if="password"/>
+                            <span v-if="isSuccessful"
+                                                                 class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                            <span v-if="errors.has('password')"
+                                                                 class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                            <slot name="password-strength"
+                                                                 :password="password"
+                                                                 :has-password="hasPassword"/>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                   v-if="errors.has('password')">
+                            {{ errors.get('password') }}
+                        </p>
+                    </div>
+                    <div class="field">
+                        <div class="control has-icons-left has-icons-right">
+                            <input v-model="password_confirmation"
+                                                                   class="input"
+                                                                   :type="confirmationMeta.content"
+                                                                   :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                                                                   :placeholder="i18n('Repeat Password')"
+                                                                   @input="errors.clear('password')">
+                            <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                            <reveal-password :meta="confirmationMeta"
+                                                                                       :class="{ 'is-spaced': match || isSuccessful || errors.has('password')}"
+                                                                                       v-if="password_confirmation"/>
+                            <span v-if="errors.has('password')"
+                                                                 class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                            <span v-if="match && !errors.has('password') || isSuccessful"
+                                                                 class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                        </div>
+                        <p class="has-text-left has-text-danger is-size-7"
+                                                   v-if="errors.has('password')">
+                            {{ errors.get('password') }}
+                        </p>
+                    </div>
+                    <div class="form-group">
+                        <label>Agree to <a href="/termsandconditions" target="_blank">terms and conditions</a> </label>
+                        <input type="radio" id="yes" value="true" v-model="terms">
+                        <label for="yes">Yes</label>
+                        <input type="radio" id="no" value="false" v-model="terms">
+                        <label for="no">No</label>
+                    </div>
+                    <div class="field">
+
+                        <button v-if="terms === 'true'" class="button is-primary is-fullwidth"
+                                                             :class="{ 'is-loading': loading }"
+                                                             type="submit"
+                                                             @click.prevent="submit()">
+                                <span class="icon is-small">
+                            <fa :icon="'user'"/>
+                        </span>
+                            <span>{{ i18n(action) }}</span>
+                        </button>
+                    </div>
+                </form>
+                <router-link
+                    :to="'/login'"
+                    class="is-pulled-right">
+                    {{ i18n('Log in') }}
+                </router-link>
+
+            <div>
+                <br /><br />
+                <router-link
+                             :to="{ name: 'about.index' }"
+                             class="is-pulled-left">
+                    {{ i18n('About') }}&nbsp;
+                </router-link>
+                <router-link
+                             :to="{ name: 'contact.index' }"
+                             class="is-pulled-right">
+                    {{ i18n('Contact') }} &nbsp;
+                </router-link>
+            </div>
+            <br />
+            <div>
+                <router-link
+                             :to="{ name: 'privacy.index' }"
+                             class="is-pulled-left">
+                    {{ i18n('Privacy Policy') }}
+                </router-link>
+                <router-link
+                             :to="{ name: 'termsandconditions.index' }"
+                             class="is-pulled-right">
+                    {{ i18n('Terms and Conditions') }}
+                </router-link>
+            </div>
+            <br /><br /><br />
+            <div>
+                Copyright 2020 Genealogia Ltd. International House, 12 Constance Street
+                London, E16 2DQ. Company Number: 12734769
+            </div>
+            <div class="is-clearfix"/>
+            </div></div>
+    </template>
+
+<script>
+    import { mapState } from 'vuex';
+    import { library } from '@fortawesome/fontawesome-svg-core';
+    import {
+        faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+        } from '@fortawesome/free-solid-svg-icons';
+    import { focus } from '@enso-ui/directives';
+    import Errors from '@enso-ui/laravel-validation';
+    import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+        library.add([
+                faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+            ]);
+
+        export default {
+        name: 'RegisterForm',
+
+                components: { RevealPassword },
+
+            directives: { focus },
+
+            inject: {
+                i18n: { from: 'i18n' },
+            },
+
+            props: {
+                action: {
+                        required: true,
+                            type: String
+                    },
+                route: {
+                        required: true,
+                            type: String
+                    }
+            },
+
+            data: () => ({
+            first_name: '',
+                last_name: '',
+                email: '',
+                errors: new Errors(),
+                isSuccessful: false,
+                loading: false,
+                password: '',
+                passwordMeta: {
+                    content: 'password',
+                    },
+            password_confirmation: null,
+                confirmationMeta: {
+                    content: 'password',
+                    },
+            terms: 'true',
+            }),
+
+            computed: {
+                ...mapState(['meta']),
+                    hasPassword() {
+                        return this.password !== null && this.password.length;
+                    },
+                match() {
+                        return this.hasPassword
+                                && this.password === this.password_confirmation;
+                    },
+                postParams() {
+                        return this.registerParams;
+                    },
+                registerParams() {
+                        const { email, password, first_name, last_name, password_confirmation } = this;
+
+                            return { email, password, first_name, last_name, password_confirmation};
+                    },
+                registerLink() {
+                        return '/api/register';
+                    },
+            },
+
+            methods: {
+                submit() {
+                        this.loading = true;
+                        this.isSuccessful = false;
+                        axios.post(this.registerLink, this.postParams)
+                            .then(({ data }) => {
+                                    this.loading = false;
+                                    this.isSuccessful = true;
+                                    this.$emit('success', data);
+
+                                    }).catch((error) => {
+                                this.loading = false;
+
+                                    const { status, data } = error.response;
+
+                                    switch (status) {
+                                        case 422:
+                                                this.errors.set(data.errors);
+                                                break;
+                                            case 429:
+                                                this.$toastr.error(data.message);
+                                                break;
+                                            default:
+                                                throw error;
+                                        }
+                            });
+                    },
+            },
+    };
+</script>
+
+<style lang="scss">
+    .login {
+        max-width: 400px;
+        margin: auto;
+
+            .is-spaced {
+                margin-right: 1.6em;
+            }
+
+            figure.logo {
+                display: inline-block;
+            }
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
new file mode 100644
index 0000000..208dc2f
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
@@ -0,0 +1,174 @@
+<template>
+            <div class="login">
+                <div class="box has-padding-medium">
+                    <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                        <figure class="image is-24x24 logo is-clickable"
+                                                                                  @click="$router.push({ name: 'login' })">
+                            <img src="/images/logo.svg">
+                        </figure>
+                        {{ meta.appName }}
+                    </h3>
+                    <div class="">
+                        <p class="t-center" v-if="!isSuccessful"> Thank you for registering.</p>
+                        <p class="t-center" v-if="isSuccessful"> Thank you for using Genealogia.</p>
+                    </div>
+
+                    <router-link
+                                                  :to="{ name: 'login' }"
+                                                  class="is-pulled-right">
+                        {{ i18n('Log in') }}
+                    </router-link>
+                    <div class="is-clearfix"/>
+                </div>
+            </div>
+        </template>
+
+<script>
+    import { mapState } from 'vuex';
+    import { library } from '@fortawesome/fontawesome-svg-core';
+    import {
+        faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+            } from '@fortawesome/free-solid-svg-icons';
+    import { focus } from '@enso-ui/directives';
+    import Errors from '@enso-ui/laravel-validation';
+    import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+            library.add([
+                        faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+                    ]);
+
+            export default {
+        name: 'VerifyForm',
+
+                        directives: { focus },
+
+                inject: {
+                    i18n: { from: 'i18n' },
+                    routeResolver: { from: 'route' },
+                },
+
+                props: {
+                    action: {
+                                required: true,
+                                        type: String
+                            },
+                    isLogin: {
+                                default: false,
+                                        type: Boolean
+                            },
+                    isReset: {
+                                default: false,
+                                        type: Boolean
+                            },
+                    route: {
+                                required: true,
+                                        type: String
+                            }
+                },
+
+                data: () => ({
+                errors: new Errors(),
+                    isSuccessful: false,
+                    loading: false,
+                }),
+
+                computed: {
+                    ...mapState(['meta']),
+                            token() {
+                                return this.$route.query.token;
+                            },
+
+                            postParams() {
+                                return this.verifyParams;
+                            },
+                    verifyParams() {
+                                const { token, loading } = this;
+                                return { token , loading};
+                            },
+                    verifyLink() {
+                                return '/api/verify';
+                            },
+                    resendLink() {
+                                return '/api/resend';
+                            },
+                },
+        mounted() {
+                    this.verify();
+                },
+        methods: {
+                    verify() {
+                                this.loading = true;
+                                this.isSuccessful = false;
+
+                                        axios.post(this.verifyLink, this.postParams)
+                                    .then(({ data }) => {
+                                                this.loading = false;
+                                                this.isSuccessful = true;
+                                                this.$emit('verified', data);
+                                            }).catch((error) => {
+                                                this.loading = false;
+
+                                                        const { status, data } = error.response;
+
+                                                        switch (status) {
+                                                            case 422:
+                                                                        this.errors.set(data.errors);
+                                                                        // go to email verify page
+                                                                                break;
+                                                                    case 429:
+                                                                        this.$toastr.error(data.message);
+                                                                        break;
+                                                                    default:
+                                                                        throw error;
+                                                                }
+                                            });
+                            },
+                    resend() {
+                                this.loading = true;
+                                this.isSuccessful = false;
+
+                                        axios.post(this.resendLink, this.postParams)
+                                    .then(({ data }) => {
+                                                this.loading = false;
+                                                this.isSuccessful = true;
+                                                this.$emit('success', data);
+                                            }).catch((error) => {
+                                                this.loading = false;
+
+                                                        const { status, data } = error.response;
+
+                                                        switch (status) {
+                                                            case 422:
+                                                                        this.errors.set(data.errors);
+                                                                        // go to email verify page
+                                                                                break;
+                                                                    case 429:
+                                                                        this.$toastr.error(data.message);
+                                                                        break;
+                                                                    default:
+                                                                        throw error;
+                                                                }
+                                            });
+                            },
+
+                        },
+    };
+    </script>
+
+<style lang="scss">
+        .login {
+            max-width: 400px;
+            margin: auto;
+
+                    .is-spaced {
+                        margin-right: 1.6em;
+                    }
+
+                    figure.logo {
+                        display: inline-block;
+                    }
+                    .t-center {
+                        text-align: center;
+                    }
+        }
+    </style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/register.js b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
new file mode 100644
index 0000000..2babb8a
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+        const Register = () => import('../pages/auth/Register.vue');
+
+        const redirect = (to, from, next) => {
+            if (store.state.auth.isAuth) {
+                        next({ path: '/' });
+                    } else {
+                        next();
+                    }
+        };
+
+        export default [{
+    name: 'register',
+            path: '/register',
+            component: Register,
+            beforeEnter: redirect,
+            meta: {
+                guestGuard: true,
+                        title: 'Register',
+                    },
+}];
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/verify.js b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
new file mode 100644
index 0000000..5682839
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+        const Verify = () => import('../pages/auth/Verify.vue');
+
+        const redirect = (to, from, next) => {
+            if (store.state.auth.isAuth) {
+                        next({ path: '/' });
+                    } else {
+                        next();
+                    }
+        };
+
+        export default [{
+    name: 'verify',
+            path: '/verify',
+            component: Verify,
+            beforeEnter: redirect,
+            meta: {
+                guestGuard: true,
+                        title: 'Activate Account',
+                    },
+}];
diff --git a/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/format.js b/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/format.js
index 5191d8c..0a5ecde 100644
--- a/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/format.js
+++ b/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/format.js
@@ -1,10 +1,9 @@
-import { format, parseISO } from 'date-fns/esm';
+// eslint-disable-next-line import/no-unresolved
 import store from '@root/store';
-import i18n from './i18n';
-import unicode2PHP from './unicode2php';
+import format from '@enso-ui/date/src/format.js';
 
 export default (date, formatStr = null) => format(
-    (typeof date === 'string') ? parseISO(date) : date,
-    unicode2PHP(formatStr || store.state.meta.dateFormat),
-    { locale: i18n[store.state.preferences.global.lang] },
+    date,
+    formatStr || store.state.meta.dateFormat,
+    store.state.preferences.global.lang,
 );
diff --git a/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/formatDistance.js b/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/formatDistance.js
index a0ee5ea..00cad60 100644
--- a/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/formatDistance.js
+++ b/node_modules/@enso-ui/ui/src/modules/plugins/date-fns/formatDistance.js
@@ -1,9 +1,5 @@
-import { formatDistance, parseISO } from 'date-fns/esm';
+// eslint-disable-next-line import/no-unresolved
 import store from '@root/store';
-import i18n from './i18n';
+import formatDistance from '@enso-ui/date/src/formatDistance.js';
 
-export default date => formatDistance(
-    (typeof date === 'string') ? parseISO(date) : date,
-    new Date(),
-    { locale: i18n[store.state.preferences.global.lang] },
-);
+export default date => formatDistance(date, store.state.preferences.global.lang);
