diff --git a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
index cfb133c..a88a151 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/AppFooter.vue
@@ -15,6 +15,14 @@
                             <span class="has-margin-left-small">
                                 +
                             </span>
+                            <a href="https://github.com/laravel-enso/enso"
+                                target="_blank">
+                                <img src="/images/enso.svg"
+                                    alt="Made with Laravel Enso"
+                                    width="28"
+                                    height="28">
+                            </a>
+			    +
                             <a href="https://vuejs.org"
                                 target="_blank">
                                 <img src="/images/vue-badge.png"
@@ -43,19 +51,8 @@
                             </a>
                         </div>
                     </div>
-                    <div class="level">
-                        <div class="level-item">
-                            <strong>Backed by:</strong>
-                            <a href="https://earthlink.ro"
-                                target="_blank">
-                                <figure class="image earthlink">
-                                    <img src="/images/earthlink.svg">
-                                </figure>
-                            </a>
-                        </div>
-                    </div>
                     <div>
-                        <a href="https://github.com/laravel-enso/enso"
+                        <a href="https://github.com/modularsoftware/genealogy"
                             target="_blank">
                             <span class="icon">
                                 <fa :icon="['fab', 'github']"/>
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue b/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
index c93f97a..dc128e6 100644
--- a/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/components/navbar/AppUpdate.vue
@@ -11,7 +11,7 @@
 </template>

 <script>
-import { mapState, mapMutations, mapGetters } from 'vuex';
+import { mapState, mapActions, mapGetters } from 'vuex';
 import { VTooltip } from 'v-tooltip';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';
@@ -41,7 +41,7 @@ export default {
     },

     methods: {
-        ...mapMutations('websockets', ['connect']),
+        ...mapActions('websockets', ['connect']),
         listen() {
             window.Echo.private(this.appUpdates)
                 .listen('.new-update', ({ title, message, tooltip }) => {
diff --git a/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefreshable.vue b/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefreshable.vue
new file mode 100644
index 0000000..66e7976
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/components/navbar/NavbarRefreshable.vue
@@ -0,0 +1,47 @@
+<template>
+    <vue-pull-refresh
+        :config="config"
+        :on-refresh="refresh">
+        <navbar class="animated slideInDown"/>
+    </vue-pull-refresh>
+</template>
+
+<script>
+
+import VuePullRefresh from "vue-pull-refresh";
+import Navbar from "@enso-ui/ui/src/bulma/components/navbar/Navbar";
+
+export default {
+    name: 'NavbarRefreshable',
+
+    components: {
+        VuePullRefresh, Navbar
+    },
+
+    inject: ['i18n'],
+
+    computed: {
+        config() {
+            return {
+                startLabel: this.i18n('Pull down to refresh'),
+                readyLabel: this.i18n('Release to refresh'),
+                loadingLabel: this.i18n('Refreshing...'),
+                errorLabel: this.i18n('Something wrong happened'),
+            }
+        }
+    },
+    methods: {
+        refresh() {
+            return new Promise(function (resolve, reject) {
+                window.location.reload(true);
+            });
+        },
+    }
+};
+</script>
+
+<style>
+    .pull-down-header {
+        z-index: 1000;
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue b/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
index e16415c..4943a04 100644
--- a/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/layouts/Default.vue
@@ -5,7 +5,7 @@
         }">
         <div class="app-main"
             :class="{ 'lights-off': lightsOff }">
-            <navbar class="animated slideInDown"/>
+            <navbar-refreshable/>
             <slide-down>
                 <bookmarks :class="[
                         { 'with-sidebar': sidebar.isVisible },
@@ -41,7 +41,7 @@
 import { SlideDown, HorizontalSlide } from '@enso-ui/transitions';
 import ScrollToTop from '@enso-ui/scroll-to-top/bulma';
 import CoreDefault from '../../core/layouts/Default.vue';
-import Navbar from '../components/navbar/Navbar.vue';
+import NavbarRefreshable from '../components/navbar/NavbarRefreshable.vue';
 import Sidebar from '../components/menu/Sidebar.vue';
 import Settings from '../components/settings/Settings.vue';
 import AppFooter from '../components/AppFooter.vue';
@@ -56,7 +56,7 @@ export default {
         CoreDefault,
         SlideDown,
         HorizontalSlide,
-        Navbar,
+        NavbarRefreshable,
         Sidebar,
         Settings,
         ScrollToTop,
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
index 6c8c3ec..7dadfde 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/administration/users/Edit.vue
@@ -63,33 +63,51 @@
                             <span class="is-hidden-mobile"/>
                         </a>
                     </div>
+                    <div class="level-item"
+                        v-if="canAccess('administration.users.token')">
+                        <a class="button is-link"
+                           @click="generateToken"
+                           v-if="ready">
+                            <span class="is-hidden-mobile">
+                                {{ i18n('Generate Token') }}
+                            </span>
+                            <span class="icon">
+                                <fa icon="key"/>
+                            </span>
+                            <span class="is-hidden-mobile"/>
+                        </a>
+                    </div>
                 </template>
             </enso-form>
             <delete-modal :user-id="deletableUser"
                 @close="deletableUser = null"
                 @destroyed="navigateToIndex"
                 v-if="!!deletableUser"/>
+            <url :show="token !== ''"
+                :link="token"
+                @close="token = ''"/>
         </div>
     </div>
 </template>

 <script>
 import { library } from '@fortawesome/fontawesome-svg-core';
-import { faUserTie, faTrashAlt } from '@fortawesome/free-solid-svg-icons';
+import { faUserTie, faTrashAlt, faKey } from '@fortawesome/free-solid-svg-icons';
 import { EnsoForm, FormField } from '@enso-ui/forms/bulma';
 import PasswordStrength from '../../auth/components/PasswordStrength.vue';
 import DeleteModal from './components/DeleteModal.vue';
+import Url from '@enso-ui/files/src/bulma/pages/files/components/Url.vue'; // TODO:: refactor to a package

-library.add(faUserTie, faTrashAlt);
+library.add(faUserTie, faTrashAlt, faKey);

 export default {
     name: 'Edit',

     components: {
-        EnsoForm, FormField, PasswordStrength, DeleteModal,
+        EnsoForm, FormField, PasswordStrength, DeleteModal, Url
     },

-    inject: ['i18n', 'canAccess'],
+    inject: ['i18n', 'canAccess', 'route'],

     data: () => ({
         deletableUser: null,
@@ -97,6 +115,7 @@ export default {
         pivotParams: { userGroups: { id: null } },
         password: null,
         passwordConfirmation: null,
+        token: '',
     }),

     methods: {
@@ -109,6 +128,12 @@ export default {
                 });
             });
         },
+        generateToken() {
+            axios.post(this.route('administration.users.token', this.$route.params))
+                .then(({data}) => {
+                    this.token = data.token;
+                });
+        },
     },
 };
 </script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
index f53508c..9b4de24 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Login.vue
@@ -6,7 +6,7 @@
 </template>

 <script>
-import { mapMutations, mapState } from 'vuex';
+import { mapMutations, mapActions, mapState } from 'vuex';
 import AuthForm from './components/AuthForm.vue';

 export default {
@@ -24,7 +24,11 @@ export default {
         ...mapMutations(['setShowQuote', 'setCsrfToken']),
         init(data) {
             this.setShowQuote(this.meta.showQuote);
-            this.setCsrfToken(data.csrfToken);
+
+            if (data.csrfToken) {
+                this.setCsrfToken(data.csrfToken);
+            }
+
             setTimeout(() => {
                 this.login();
                 this.home(true);
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
new file mode 100644
index 0000000..d79156f
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Register.vue
@@ -0,0 +1,36 @@
+<template>
+    <register-form
+        action="Register"
+        route="register"
+        @success="init"/>
+</template>
+
+<script>
+import { mapMutations, mapState } from 'vuex';
+import RegisterForm from './components/RegisterForm.vue';
+
+export default {
+    name: 'Register',
+
+    components: { RegisterForm },
+
+    computed: {
+        ...mapState(['meta']),
+    },
+
+    methods: {
+        ...mapMutations('auth', ['login']),
+        ...mapMutations('layout', ['home']),
+        ...mapMutations(['setShowQuote', 'setCsrfToken']),
+        init(data) {
+            this.setShowQuote(this.meta.showQuote);
+            this.setCsrfToken(data.csrfToken);
+            setTimeout(() => {
+                this.$router.push({ name: 'verify' });
+                // this.login();
+                // this.home(true);
+            }, 500);
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
new file mode 100644
index 0000000..df56819
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/Verify.vue
@@ -0,0 +1,34 @@
+<template>
+    <verify-form
+        action="Resend"
+        @verified="init"/>
+</template>
+
+<script>
+import { mapMutations, mapState } from 'vuex';
+import VerifyForm from './components/VerifyForm.vue';
+
+export default {
+    name: 'Verify',
+
+    components: { VerifyForm },
+
+    computed: {
+        ...mapState(['meta']),
+    },
+
+    methods: {
+        ...mapMutations('auth', ['login']),
+        ...mapMutations('layout', ['home']),
+        ...mapMutations(['setShowQuote', 'setCsrfToken']),
+        init(data) {
+            this.setShowQuote(this.meta.showQuote);
+            this.setCsrfToken(data.csrfToken);
+            setTimeout(() => {
+                this.login();
+                this.home(true);
+            }, 3000);
+        },
+    },
+};
+</script>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
index 12bf71d..776dd35 100644
--- a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/AuthForm.vue
@@ -7,6 +7,7 @@
                     <img src="/images/logo.svg">
                 </figure>
                 {{ meta.appName }}
+                <span v-if="isWebview"> Mobile</span>
             </h3>
             <form class="has-margin-bottom-medium"
                 @submit.prevent="submit()">
@@ -95,7 +96,7 @@
                         {{ errors.get('password') }}
                     </p>
                 </div>
-                <div v-if="isLogin" class="field">
+                <div v-if="isLogin && !isWebview" class="field">
                     <div class="control">
                         <label class="checkbox">
                         <input v-model="remember"
@@ -127,7 +128,7 @@
 </template>

 <script>
-import { mapState } from 'vuex';
+import { mapState, mapGetters } from 'vuex';
 import { library } from '@fortawesome/fontawesome-svg-core';
 import {
     faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
@@ -189,6 +190,7 @@ export default {

     computed: {
         ...mapState(['meta']),
+        ...mapGetters(['isWebview']),
         token() {
             return this.isReset
                 ? this.$route.params.token
@@ -212,8 +214,14 @@ export default {
         },
         loginParams() {
             const { email, password, remember } = this;
+            const device_name = this.isWebview ? 'mobile_app' : undefined;

-            return { email, password, remember };
+            return { email, password, remember, device_name };
+        },
+        config() {
+            return this.isWebview
+                ? { headers: { 'webview': this.isWebview } }
+                : {};
         },
         resetParams() {
             const { email, password, token } = this;
@@ -227,7 +235,7 @@ export default {
             this.loading = true;
             this.isSuccessful = false;

-            axios.post(this.routeResolver(this.route), this.postParams)
+            axios.post(this.routeResolver(this.route), this.postParams, this.config)
                 .then(({ data }) => {
                     this.loading = false;
                     this.isSuccessful = true;
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
new file mode 100644
index 0000000..cfe5fe5
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/RegisterForm.vue
@@ -0,0 +1,265 @@
+<template>
+    <div class="login">
+        <div class="box has-padding-medium">
+            <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                <figure class="image is-24x24 logo is-clickable"
+                    @click="$router.push({ name: 'login' })">
+                    <img src="/images/logo.svg">
+                </figure>
+                {{ meta.appName }}
+            </h3>
+            <form class="has-margin-bottom-medium"
+                @submit.prevent="submit()">
+                <div class="field">
+                    <div class="control has-icons-left has-icons-right">
+                        <input v-model="name"
+                            v-focus
+                            class="input"
+                            type="text"
+                            :class="{ 'is-danger': errors.has('name'), 'is-success': isSuccessful }"
+                            :placeholder="i18n('User Name')"
+                            @input="errors.clear('name')">
+                        <span class="icon is-small is-left">
+                            <fa icon="user"/>
+                        </span>
+                        <span v-if="isSuccessful"
+                            class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                        <span v-if="errors.has('name')"
+                            class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                    </div>
+                    <p class="has-text-left has-text-danger is-size-7"
+                        v-if="errors.has('name')">
+                        {{ errors.get('name') }}
+                    </p>
+                </div>
+                <div class="field">
+                    <div class="control has-icons-left has-icons-right">
+                        <input v-model="email"
+                            v-focus
+                            class="input"
+                            type="email"
+                            :class="{ 'is-danger': errors.has('email'), 'is-success': isSuccessful }"
+                            :placeholder="i18n('Email')"
+                            @input="errors.clear('email')">
+                        <span class="icon is-small is-left">
+                            <fa icon="envelope"/>
+                        </span>
+                        <span v-if="isSuccessful"
+                            class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                        <span v-if="errors.has('email')"
+                            class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                    </div>
+                    <p class="has-text-left has-text-danger is-size-7"
+                        v-if="errors.has('email')">
+                        {{ errors.get('email') }}
+                    </p>
+                </div>
+                <div class="field">
+                    <div class="control has-icons-left has-icons-right">
+                        <input v-model="password"
+                            class="input"
+                            :type="passwordMeta.content"
+                            :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                            :placeholder="i18n('Password')"
+                            @input="errors.clear('password')">
+                        <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                        <reveal-password :meta="passwordMeta"
+                            :class="{ 'is-spaced': isSuccessful || errors.has('password') }"
+                            v-if="password"/>
+                        <span v-if="isSuccessful"
+                            class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                        <span v-if="errors.has('password')"
+                            class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        <slot name="password-strength"
+                            :password="password"
+                            :has-password="hasPassword"/>
+                    </div>
+                    <p class="has-text-left has-text-danger is-size-7"
+                        v-if="errors.has('password')">
+                        {{ errors.get('password') }}
+                    </p>
+                </div>
+                <div class="field">
+                    <div class="control has-icons-left has-icons-right">
+                        <input v-model="password_confirmation"
+                            class="input"
+                            :type="confirmationMeta.content"
+                            :class="{ 'is-danger': errors.has('password'), 'is-success': isSuccessful }"
+                            :placeholder="i18n('Repeat Password')"
+                            @input="errors.clear('password')">
+                        <span class="icon is-small is-left">
+                            <fa icon="lock"/>
+                        </span>
+                        <reveal-password :meta="confirmationMeta"
+                            :class="{ 'is-spaced': match || isSuccessful || errors.has('password')}"
+                            v-if="password_confirmation"/>
+                        <span v-if="errors.has('password')"
+                            class="icon is-small is-right has-text-danger">
+                            <fa icon="exclamation-triangle"/>
+                        </span>
+                        <span v-if="match && !errors.has('password') || isSuccessful"
+                            class="icon is-small is-right has-text-success">
+                            <fa icon="check"/>
+                        </span>
+                    </div>
+                    <p class="has-text-left has-text-danger is-size-7"
+                        v-if="errors.has('password')">
+                        {{ errors.get('password') }}
+                    </p>
+                </div>
+
+                <div class="field">
+                    <button class="button is-primary is-fullwidth"
+                        :class="{ 'is-loading': loading }"
+                        type="submit"
+                        @click.prevent="submit()">
+                        <span class="icon is-small">
+                            <fa :icon="'user'"/>
+                        </span>
+                        <span>{{ i18n(action) }}</span>
+                    </button>
+                </div>
+            </form>
+            <router-link
+                :to="'/login'"
+                class="is-pulled-right">
+                {{ i18n('Log in') }}
+            </router-link>
+            <div class="is-clearfix"/>
+        </div>
+    </div>
+</template>
+
+<script>
+import { mapState } from 'vuex';
+import { library } from '@fortawesome/fontawesome-svg-core';
+import {
+    faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+} from '@fortawesome/free-solid-svg-icons';
+import { focus } from '@enso-ui/directives';
+import Errors from '@enso-ui/laravel-validation';
+import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+library.add([
+    faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+]);
+
+export default {
+    name: 'RegisterForm',
+
+    components: { RevealPassword },
+
+    directives: { focus },
+
+    inject: {
+        i18n: { from: 'i18n' },
+    },
+
+    props: {
+        action: {
+            required: true,
+            type: String
+        },
+        route: {
+            required: true,
+            type: String
+        }
+    },
+
+    data: () => ({
+        name: '',
+        email: '',
+        errors: new Errors(),
+        isSuccessful: false,
+        loading: false,
+        password: '',
+        passwordMeta: {
+            content: 'password',
+        },
+        password_confirmation: null,
+        confirmationMeta: {
+            content: 'password',
+        },
+    }),
+
+    computed: {
+        ...mapState(['meta']),
+        hasPassword() {
+            return this.password !== null && this.password.length;
+        },
+        match() {
+            return this.hasPassword
+                && this.password === this.password_confirmation;
+        },
+        postParams() {
+            return this.registerParams;
+        },
+        registerParams() {
+            const { email, password, name, password_confirmation } = this;
+
+            return { email, password, name, password_confirmation};
+        },
+        registerLink() {
+            return '/api/register';
+        },
+    },
+
+    methods: {
+        submit() {
+            this.loading = true;
+            this.isSuccessful = false;
+            axios.post(this.registerLink, this.postParams)
+                .then(({ data }) => {
+                    this.loading = false;
+                    this.isSuccessful = true;
+                    this.$emit('success', data);
+
+                }).catch((error) => {
+                    this.loading = false;
+
+                    const { status, data } = error.response;
+
+                    switch (status) {
+                        case 422:
+                            this.errors.set(data.errors);
+                            break;
+                        case 429:
+                            this.$toastr.error(data.message);
+                            break;
+                        default:
+                            throw error;
+                    }
+                });
+        },
+    },
+};
+</script>
+
+<style lang="scss">
+    .login {
+        max-width: 400px;
+        margin: auto;
+
+        .is-spaced {
+            margin-right: 1.6em;
+        }
+
+        figure.logo {
+            display: inline-block;
+        }
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
new file mode 100644
index 0000000..09d2707
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/pages/auth/components/VerifyForm.vue
@@ -0,0 +1,174 @@
+<template>
+    <div class="login">
+        <div class="box has-padding-medium">
+            <h3 class="title is-3 has-text-black has-text-centered has-margin-bottom-medium">
+                <figure class="image is-24x24 logo is-clickable"
+                    @click="$router.push({ name: 'login' })">
+                    <img src="/images/logo.svg">
+                </figure>
+                {{ meta.appName }}
+            </h3>
+            <div class="">
+                <p class="t-center" v-if="!isSuccessful"> Thank you for registering.</p>
+                <p class="t-center" v-if="isSuccessful"> Thank you for using Genealogia.</p>
+            </div>
+
+            <router-link v-if="isLogin"
+                :to="{ name: 'login' }"
+                class="is-pulled-right">
+                {{ i18n('Log in') }}
+            </router-link>
+            <div class="is-clearfix"/>
+        </div>
+    </div>
+</template>
+
+<script>
+import { mapState } from 'vuex';
+import { library } from '@fortawesome/fontawesome-svg-core';
+import {
+    faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+} from '@fortawesome/free-solid-svg-icons';
+import { focus } from '@enso-ui/directives';
+import Errors from '@enso-ui/laravel-validation';
+import RevealPassword from '@enso-ui/forms/src/bulma/parts/RevealPassword.vue';
+
+library.add([
+    faEnvelope, faCheck, faExclamationTriangle, faLock, faUser,
+]);
+
+export default {
+    name: 'VerifyForm',
+
+    directives: { focus },
+
+    inject: {
+        i18n: { from: 'i18n' },
+        routeResolver: { from: 'route' },
+    },
+
+    props: {
+        action: {
+            required: true,
+            type: String
+        },
+        isLogin: {
+            default: false,
+            type: Boolean
+        },
+        isReset: {
+            default: false,
+            type: Boolean
+        },
+        route: {
+            required: true,
+            type: String
+        }
+    },
+
+    data: () => ({
+        errors: new Errors(),
+        isSuccessful: false,
+        loading: false,
+    }),
+
+    computed: {
+        ...mapState(['meta']),
+        token() {
+            return this.$route.query.token;
+        },
+
+        postParams() {
+            return this.verifyParams;
+        },
+        verifyParams() {
+            const { token, loading } = this;
+            return { token , loading};
+        },
+        verifyLink() {
+            return '/api/verify';
+        },
+        resendLink() {
+            return '/api/resend';
+        },
+    },
+    mounted() {
+        this.verify();
+    },
+    methods: {
+        verify() {
+            this.loading = true;
+            this.isSuccessful = false;
+
+            axios.post(this.verifyLink, this.postParams)
+                .then(({ data }) => {
+                    this.loading = false;
+                    this.isSuccessful = true;
+                    this.$emit('verified', data);
+                }).catch((error) => {
+                    this.loading = false;
+
+                    const { status, data } = error.response;
+
+                    switch (status) {
+                        case 422:
+                            this.errors.set(data.errors);
+                            // go to email verify page
+                            break;
+                        case 429:
+                            this.$toastr.error(data.message);
+                            break;
+                        default:
+                            throw error;
+                    }
+                });
+        },
+        resend() {
+            this.loading = true;
+            this.isSuccessful = false;
+
+            axios.post(this.resendLink, this.postParams)
+                .then(({ data }) => {
+                    this.loading = false;
+                    this.isSuccessful = true;
+                    this.$emit('success', data);
+                }).catch((error) => {
+                    this.loading = false;
+
+                    const { status, data } = error.response;
+
+                    switch (status) {
+                        case 422:
+                            this.errors.set(data.errors);
+                            // go to email verify page
+                            break;
+                        case 429:
+                            this.$toastr.error(data.message);
+                            break;
+                        default:
+                            throw error;
+                    }
+                });
+        },
+
+    },
+};
+</script>
+
+<style lang="scss">
+    .login {
+        max-width: 400px;
+        margin: auto;
+
+        .is-spaced {
+            margin-right: 1.6em;
+        }
+
+        figure.logo {
+            display: inline-block;
+        }
+        .t-center {
+            text-align: center;
+        }
+    }
+</style>
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/register.js b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
new file mode 100644
index 0000000..d1752b4
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/register.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+const Register = () => import('../pages/auth/Register.vue');
+
+const redirect = (to, from, next) => {
+    if (store.state.auth.isAuth) {
+        next({ path: '/' });
+    } else {
+        next();
+    }
+};
+
+export default [{
+    name: 'register',
+    path: '/register',
+    component: Register,
+    beforeEnter: redirect,
+    meta: {
+        guestGuard: true,
+        title: 'Register',
+    },
+}];
diff --git a/node_modules/@enso-ui/ui/src/bulma/routes/verify.js b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
new file mode 100644
index 0000000..b155389
--- /dev/null
+++ b/node_modules/@enso-ui/ui/src/bulma/routes/verify.js
@@ -0,0 +1,22 @@
+import store from '@root/store';
+
+const Verify = () => import('../pages/auth/Verify.vue');
+
+const redirect = (to, from, next) => {
+    if (store.state.auth.isAuth) {
+        next({ path: '/' });
+    } else {
+        next();
+    }
+};
+
+export default [{
+    name: 'verify',
+    path: '/verify',
+    component: Verify,
+    beforeEnter: redirect,
+    meta: {
+        guestGuard: true,
+        title: 'Activate Account',
+    },
+}];
\ No newline at end of file
diff --git a/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue b/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
index 43e9741..5a273b7 100644
--- a/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
+++ b/node_modules/@enso-ui/ui/src/core/components/navbar/IO.vue
@@ -1,5 +1,5 @@
 <script>
-import { mapState, mapMutations, mapGetters } from 'vuex';
+import {mapState, mapGetters, mapActions} from 'vuex';
 import Pusher from 'pusher-js'; //TODO remove?

 export default {
@@ -26,7 +26,7 @@ export default {
     },

     methods: {
-        ...mapMutations('websockets', ['connect']),
+        ...mapActions('websockets', ['connect']),
         listen() {
             window.Echo.private(this.ioChannel)
                 .listen('.io-started', ({ operation }) => {
diff --git a/node_modules/@enso-ui/ui/src/core/layouts/Home.vue b/node_modules/@enso-ui/ui/src/core/layouts/Home.vue
index 23bc732..b639410 100644
--- a/node_modules/@enso-ui/ui/src/core/layouts/Home.vue
+++ b/node_modules/@enso-ui/ui/src/core/layouts/Home.vue
@@ -28,6 +28,7 @@ export default {

     methods: {
         ...mapMutations('auth', ['setIntendedRoute', 'setIntendedPath']),
+        ...mapMutations('register', ['register']),
         ...mapMutations('layout', ['home']),
         ...mapActions(['loadAppState']),
         ...mapActions('layout', ['setTheme']),
diff --git a/node_modules/@enso-ui/ui/src/modules/store.js b/node_modules/@enso-ui/ui/src/modules/store.js
index 4cfa90d..bc3d8f8 100644
--- a/node_modules/@enso-ui/ui/src/modules/store.js
+++ b/node_modules/@enso-ui/ui/src/modules/store.js
@@ -24,6 +24,7 @@ const coreState = {

 const coreGetters = {
     routes: state => Object.keys(state.routes),
+    isWebview: () => typeof ReactNativeWebView !== 'undefined',
     requests: state => state.requests.length,
     requestIndex: state => ({ url, method }) => state.requests
         .findIndex(request => method === request.method && url === request.url),
diff --git a/node_modules/@enso-ui/ui/src/modules/store/auth.js b/node_modules/@enso-ui/ui/src/modules/store/auth.js
index 02040ac..1f7e079 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/auth.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/auth.js
@@ -14,6 +14,7 @@ export const mutations = {
     logout(state) {
         state.isAuth = false;
         localStorage.setItem('isAuth', false);
+        localStorage.removeItem('authorization');
     },
     setIntendedRoute: (state, value) => (state.intendedRoute = value),
     setIntendedPath: (state, value) => (state.intendedPath = value),
diff --git a/node_modules/@enso-ui/ui/src/modules/store/websockets.js b/node_modules/@enso-ui/ui/src/modules/store/websockets.js
index 6bf8a0d..5981703 100644
--- a/node_modules/@enso-ui/ui/src/modules/store/websockets.js
+++ b/node_modules/@enso-ui/ui/src/modules/store/websockets.js
@@ -20,7 +20,10 @@ export const mutations = {
         state.channels = config.channels;
         state.pusher = config.pusher;
     },
-    connect: (state) => {
+};
+
+export const actions = {
+    connect: ({state}) => {
         if (!window.Echo) {
             window.Echo = new Echo({
                 broadcaster: 'pusher',
