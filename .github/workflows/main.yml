# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  yarn:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: borales/actions-yarn@v2.0.0
      - name: 'install & build'
        run: |
          cd client
          yarn install
          yarn build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: |
            public
          

  phpunit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'PhpUnit'
        run: |
          sudo php artisan test

  phpcpd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run Phpcpd'
        run: |
          sudo test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
          sudo php phpcpd.phar app/ 

  php-insights:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run php-insight'
        run: |
          sudo php artisan insights --min-quality=90 --min-complexity=90 --min-architecture=80 --min-style=90 --no-interaction

  sensiolabs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run php-insight'
        run: |
          sudo git clone https://github.com/sensiolabs/security-checker.git 
          cd security-checker
          sudo composer install  
          sudo php security-checker security:check ../composer.lock    
  migration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'homestead'
          mysql user: 'homestead'
          mysql password: 'secret' 
      - uses: php-actions/composer@v4 
      - name: 'Run migration'
        run: |
          sudo php artisan migrate --force    
