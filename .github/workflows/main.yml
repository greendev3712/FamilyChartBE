name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  deployment:
  workflow_dispatch:

env:
  DB_DATABASE: enso
  DB_USERNAME: enso
  DB_PASSWORD: secret

jobs:
  yarn:
    runs-on: ubuntu-20.04
    env:
      NODE_OPTIONS: --max_old_space_size=3072
      SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      SENTRY_URL: ${{ secrets.SENTRY_URL }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}  
    steps:
      - uses: actions/checkout@v2
      - uses: borales/actions-yarn@v2.0.0
      - name: 'install & build'
        run: |
          cd client
          yarn install
          yarn build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: resources
          path: |
            public/css/
            public/js/
            public/images/
            resources/views

  phpunit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2 
      - name: 'PhpUnit'
        run: |
          sudo php artisan test

  phpcpd:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run Phpcpd'
        run: |
          sudo test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
          sudo php phpcpd.phar app/ 

  php-insights:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run php-insight'
        run: |
          sudo php artisan insights --min-quality=90 --min-complexity=90 --min-architecture=80 --min-style=90 --no-interaction

  sensiolabs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: php-actions/composer@v4  
      - name: 'Run php-insight'
        run: |
          sudo git clone https://github.com/sensiolabs/security-checker.git 
          cd security-checker
          sudo composer install  
          sudo php security-checker security:check ../composer.lock    
  migration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{env.DB_DATABASE}}
          mysql user: ${{env.DB_USERNAME}}
          mysql password: ${{env.DB_PASSWORD}} 
      - uses: php-actions/composer@v4 
      - name: 'Run migration'
        run: |
          env | grep -i db_
          cp .env.example .env
          php artisan migrate --force
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'deployment' || github.event_name == 'push' }}
    needs: [phpunit, phpcpd, migration, yarn, sensiolabs, php-insights]
    steps:
      - uses: actions/checkout@v2
      - name: 'Trig envoyer'
        run: |
          curl ${{ secrets.DEPLOY_WEBHOOK }}
